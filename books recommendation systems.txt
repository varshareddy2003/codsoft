import pandas as pd
from sklearn.metrics.pairwise import cosine_similarity
from sklearn.feature_extraction.text import TfidfVectorizer

# Load your book dataset (books.csv) with columns: book_id, title, and genre
df = pd.read_csv('books.csv')

# Initialize TfidfVectorizer
tfidf = TfidfVectorizer(stop_words='english')

# Fit and transform book data
book_tfidf = tfidf.fit_transform(df['title'])

# Compute cosine similarity between books
cosine_sim = cosine_similarity(book_tfidf)

# Define function to get book recommendations based on cosine similarity
def get_recommendations(book_title, cosine_sim=cosine_sim):
    # Get index of book from its title
    idx = df[df['title'] == book_title].index[0]

    # Get the pairwsie similarity scores for all books with that book
    sim_scores = list(enumerate(cosine_sim[idx]))

    # Sort the books based on the similarity scores
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)

    # Get the scores of the 10 most similar books
    sim_scores = sim_scores[1:11]

    # Get the book indices
    book_indices = [i[0] for i in sim_scores]

    # Return the top 10 most similar books
    return df['title'].iloc[book_indices]
print(get_recommendations('To Kill a Mockingbird')
